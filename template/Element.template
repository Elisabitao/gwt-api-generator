<%= disclaimer() %>
package <%= ns %>.client.element;

import com.vaadin.components.gwt.polymer.client.webapi.*;
import com.google.gwt.core.client.JavaScriptObject;
import com.google.gwt.core.client.JsArray;
import com.google.gwt.core.client.js.JsProperty;
import com.google.gwt.core.client.js.JsType;

/**
 * <%= getDescription(' ') %>
 */
@JsType
public interface <%= elementClassName() %> <%= baseClassName() %> {
    /**
     * AUTO-GENERATED CODE, DO NOT EDIT !!!
     */

    public static final String TAG = "<%= name %>";
    public static final String SRC = "<%= path %>";

<% if (hasAttributes()) _.forEach(attributes, function(attribute){ %>
    /**
     * <%= getDescription('     ', atribute) %>
     *
     * @attribute <%= attribute.name %>
     * @type <%= attribute.type %>
     */
    @JsProperty <%= computeType(attribute.type) %> <%= computeGetterWithPrefix(attribute) %>();
    @JsProperty void <%= computeSetterWithPrefix(attribute) %>(<%= computeType(attribute.type) %> value);
<% }); %>
<% if (hasProperties()) _.forEach(properties, function(item){ if (isBehavior() || !item.isBehavior) if (item.type != 'Function') { %>
    /**
     * <%= getDescription('     ', item) %>
     *
     * @property <%= item.name %>
     * @type <%= item.type %>
     */
    @JsProperty <%= computeType(item.type) %> <%= computeGetterWithPrefix(item) %>();
    @JsProperty void <%= computeSetterWithPrefix(item) %>(<%= computeType(item.type) %> value);
  <% } else { %>
    /**
     * <%= getDescription('     ', item) %>
     *
     * @method <%= item.name %><% if (!!item.params) _.forEach(item.params, function(param) { %>
     * @param {<%= param.type %>} <%= param.name %> <%= param.description %> <% }); %>
     */
    void <%= item.name %>(<%= typedParamsString(item) %>);
<% }}); %>
}
